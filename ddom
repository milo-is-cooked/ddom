<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Secure Login Page</title>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            color: #333;
        }
        
        .login-container {
            background-color: white;
            border-radius: 10px;
            box-shadow: 0 15px 30px rgba(0, 0, 0, 0.1);
            padding: 30px;
            width: 350px;
            text-align: center;
        }
        
        h1 {
            color: #764ba2;
            margin-bottom: 30px;
            font-weight: 600;
        }
        
        .form-group {
            margin-bottom: 20px;
            text-align: left;
        }
        
        label {
            display: block;
            margin-bottom: 8px;
            font-weight: 500;
        }
        
        input {
            width: 100%;
            padding: 12px;
            border: 1px solid #ddd;
            border-radius: 5px;
            font-size: 16px;
            box-sizing: border-box;
            transition: border 0.3s;
        }
        
        input:focus {
            border-color: #764ba2;
            outline: none;
        }
        
        .error {
            color: #e74c3c;
            font-size: 14px;
            margin-top: 5px;
            display: none;
        }
        
        button {
            background-color: #764ba2;
            color: white;
            border: none;
            padding: 12px 20px;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
            width: 100%;
            transition: all 0.3s;
            margin-top: 10px;
        }
        
        button:hover {
            background-color: #5d3a7e;
        }
        
        button.glow {
            animation: glow 1.5s infinite alternate;
            box-shadow: 0 0 10px #764ba2;
        }
        
        @keyframes glow {
            from {
                box-shadow: 0 0 10px #764ba2;
            }
            to {
                box-shadow: 0 0 20px #764ba2, 0 0 30px #667eea;
            }
        }
        
        .success-message {
            color: #2ecc71;
            margin-top: 20px;
            display: none;
        }
    </style>
</head>
<body>
    <div class="login-container">
        <h1>Create Your Account</h1>
        
        <form id="loginForm">
            <div class="form-group">
                <label for="email">Email Address</label>
                <input type="email" id="email" name="email" required placeholder="Enter your email">
                <div id="emailError" class="error">Please enter a valid email address</div>
            </div>
            
            <div class="form-group">
                <label for="password">Password</label>
                <input type="password" id="password" name="password" required placeholder="Create a password">
            </div>
            
            <div class="form-group">
                <label for="confirmPassword">Confirm Password</label>
                <input type="password" id="confirmPassword" name="confirmPassword" required placeholder="Confirm your password">
                <div id="passwordError" class="error">Passwords do not match</div>
            </div>
            
            <button type="submit" id="submitBtn">Sign Up</button>
            <button type="button" id="successBtn" class="glow" style="display: none;">Continue to Dashboard</button>
            
            <div id="successMessage" class="success-message">
                Account created successfully! (Email simulation in console)
            </div>
        </form>
    </div>

    <script>
        document.getElementById('loginForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            const email = document.getElementById('email').value;
            const password = document.getElementById('password').value;
            const confirmPassword = document.getElementById('confirmPassword').value;
            
            // Reset errors
            document.getElementById('emailError').style.display = 'none';
            document.getElementById('passwordError').style.display = 'none';
            
            let isValid = true;
            
            // Email validation
            if (!validateEmail(email)) {
                document.getElementById('emailError').style.display = 'block';
                isValid = false;
            }
            
            // Password match validation
            if (password !== confirmPassword) {
                document.getElementById('passwordError').style.display = 'block';
                isValid = false;
            }
            
            if (isValid) {
                // Check if email exists (simulated)
                checkEmailExists(email).then(exists => {
                    if (!exists) {
                        // Show success state
                        document.getElementById('submitBtn').style.display = 'none';
                        document.getElementById('successBtn').style.display = 'block';
                        document.getElementById('successMessage').style.display = 'block';
                        
                        // Log email sending to console (since we can't actually send emails from GitHub Pages)
                        console.log(`[Simulation] Email would be sent to: ${email}`);
                    } else {
                        alert('This email is already registered. Please use a different email.');
                    }
                });
            }
        });
        
        document.getElementById('successBtn').addEventListener('click', function() {
            // Redirect to dashboard (simulated)
            console.log("[Simulation] Redirecting to dashboard.html");
            alert("In a real implementation, this would redirect to dashboard.html and send an email");
            // window.location.href = 'dashboard.html'; // Uncomment in real implementation
        });
        
        function validateEmail(email) {
            const re = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
            return re.test(String(email).toLowerCase());
        }
        
        // Simulate checking if email exists
        function checkEmailExists(email) {
            return new Promise(resolve => {
                setTimeout(() => {
                    // For demo purposes, we'll say the email doesn't exist if it contains "real"
                    resolve(email.includes('fake'));
                }, 500);
            });
        }
    </script>
</body>
</html>
